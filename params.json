{
  "name": "FrozenStorm",
  "tagline": "FrozenStorm is a project to make cryptography, hashing, checksumming, compression and transformation algorithms available over a unified interface.",
  "body": "![logo](https://i.imgur.com/EfyWPnu.png)\r\n\r\n### Easy in C\r\n\r\nFrozenStorm has a simple an unified C interface for its various components. This is how you generate a SHA1 hash and print it to the console in C:\r\n\r\n```c\r\n#include <stdio.h>\r\n#include \"FrozenStorm.h\"\r\n\r\nvoid sha1example()\r\n{\r\n    const char* data = \"sha1\";\r\n    unsigned char* hash;\r\n    size_t hashsize, i;\r\n\r\n    hash_sha1(data, strlen(data), &hash, &hashsize);\r\n    for (i = 0; i < hashsize; i++)\r\n        printf(\"%02x\", hash[i]);\r\n    puts(\"\");\r\n\r\n    frozen_free(hash);\r\n}\r\n```\r\n\r\n### Even easier in C++\r\n\r\nIf you use the provided C++ wrapper it looks like this:\r\n\r\n```c++\r\n#include <stdio.h>\r\n#include \"FrozenStorm.h\"\r\n\r\nvoid sha1example()\r\n{\r\n    auto data = \"sha1\";\r\n    auto hash = FrozenStorm::hash_sha1(data, strlen(data));\r\n    puts(FrozenStorm::hash_ToString(hash).c_str());\r\n}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}